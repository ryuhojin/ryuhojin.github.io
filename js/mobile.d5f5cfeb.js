(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["mobile"],{"1c62":function(e,n,t){"use strict";t("6e1f")},"6e1f":function(e,n,t){},8382:function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-container",{staticStyle:{"max-width":"740px"}},[t("v-col",[t("h1",[e._v("프로젝트 준비")]),t("br"),t("p",[t("strong",{staticStyle:{color:"rgb(0, 146, 255)"}},[e._v("모바일 웹 프로젝트")]),e._v(" 에서는 기존의 프로젝트와 달리 몇가지 준비가 필요합니다.")]),t("p",[e._v("네이티브의 WEB-VIEW 를 이용하여 웹 화면을 노출하는 프로젝트에서 FE 개발자가 안드로이드 개발자와 협력하여 개발할 것들에 대해서 설명합니다.")]),t("p",[e._v("모바일-웹 프로젝트에서 필수요소는 "),t("strong",[e._v("Birdge")]),e._v("입니다. "),t("strong",[e._v("Birdge")]),e._v("는 말 그대로 모바일과 웹을 이어주는 다리라고 생각하면 됩니다. 보통 브릿지는 "),t("strong",[e._v("웹에서 네이티브를 호출하는 브릿지")]),e._v(" / "),t("strong",[e._v("네이티브가 웹을 호출하는 브릿지")]),e._v("가 필요합니다.")]),t("v-subheader",{staticStyle:{"background-color":"#f6f6f6",color:"#000","font-weight":"bold"}},[e._v("웹 → 네이티브 브릿지(분기방식)")]),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("            "),t("code",{staticClass:"javascript codeSnippet"},[e._v("\n    requestFromWebView(command,params,isReqeustSuccess,isReqeustFailed) {\n        let _requestTime = 'ID'+Date.now();\n        \n        let _funcObject = {\n            'id': _requestTime,\n            'command': command,\n            'params':params,\n            'success':isReqeustSuccess,\n            'fail':isReqeustFailed\n            \n        }\n        \n        let _requestCommandJsonString = JSON.stringify(_funcObject);\n        \n        let _kindOfDevice = bnkBridge.checkConnectedOS(); //디바이스구별\n        \n        switch(_kindOfDevice){\n            case \"Android\":\n                window.bnkBridge.requestFromWebView(_requestCommandJsonString);\n                break;\n            case \"iOS\":\n                window.webkit.messageHandlers.bnkBridge.postMessage(_requestCommandJsonString);\n                break;\n            default :\n                console.log(\"지원하지 않는 디바이스 입니다\");\n                break;\n        }\n    }\n            ")]),e._v("\n        ")]),t("p",[e._v("위 코드는 웹에서 네이티브를 호출할 때 쓰는 브릿지입니다. 해당 함수는 명령어인 command, JSON형식의 param, 성공시 콜백, 실패시 콜백을 매개변수로 받습니다. 또한 checkConnectedOS를 통해 기기를 구별하여 네이티브 메소드를 호출합니다.")]),t("p",[e._v("네이티브 개발자와 "),t("code",[e._v("bnkBridge")]),e._v("라는 인터페이스명을 정한 후 안드로이드는 "),t("code",[e._v("window.인터페이스명.함수명(매개변수)")]),e._v(", 아이폰은 "),t("code",[e._v("window.webkit.messageHandlers.인터페이스명.함수명(매개변수)")]),e._v(" 라고 정의하면 웹에서 네이티브로 데이터 전송 및 호출이 가능합니다. ")]),t("v-subheader",{staticStyle:{"background-color":"#f6f6f6",color:"#000","font-weight":"bold"}},[e._v("네이티브 → 웹 브릿지(분기방식)")]),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("            "),t("code",{staticClass:"javascript codeSnippet"},[e._v('\n    requestFromNative(command,params){\n        switch(command){\n            case "DO_WEB_BACK":\n                window.history.back();\n                break;\n            case "AFTER_LOGIN_DATA":\n                /**\n                * APPLICATION 초기데이터 (로그인 후 메뉴 및 사용자 정보 설정)\n                */ \n                bnkBridge.setMenu(params.menu)\n                bnkBridge.setUserData(params.user)\n                break;\n            case "BEFORE_LOGIN_DATA":\n                /**\n                * APPLICATION 초기데이터 (로그인 이전 메뉴)\n                */\n                bnkBridge.setMenu(params.menu)\n        }\n    }\n            ')]),e._v("\n        ")]),t("p",[e._v("위 코드는 네이티브에서 웹으로 호출할 때 쓰는 브릿지 입니다. 커맨드와 파라미터를 넘겨받아 switch 문을 통해 분기하여 실행됩니다. 보통 백버튼등을 구성할때 위와 같이 호출받아 window.history.back()을 실행시켜 주면 됩니다.")]),t("v-subheader",[e._v("주의 해야 될 점은 위와 같은 분기 방식은 연결하는 브릿지 호출의 가짓수가 20개 이하일 때, 사용하는 것이 좋으며 그 이상이 되면 디버깅 시 불리한 요소가 될 수 있으니 인터페이스의 함수를 분리하여 주는 것이 좋습니다.")]),t("br"),t("v-subheader",{staticStyle:{"background-color":"#f6f6f6",color:"#000","font-weight":"bold"}},[e._v("사용중인 브릿지 공통 함수 FULL SOURCE")]),t("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[e._v("            "),t("code",{staticClass:"javascript codeSnippet"},[e._v("\n    var bnkBridge = {\n        API_URL:'',\n        /**\n        * @name requestFromWebView 웹에서 네이티브 호출\n        * @param {*} command 명령어\n        * @param {*} params 전송할 파라미터\n        * @param {*} isReqeustSuccess 성공시 콜백\n        * @param {*} isReqeustFailed 실패시 콜백\n        */\n        requestFromWebView(command,params,isReqeustSuccess,isReqeustFailed) {\n            let _requestTime = 'ID'+Date.now();\n            \n            let _funcObject = {\n                'id': _requestTime,\n                'command': command,\n                'params':params,\n                'success':isReqeustSuccess,\n                'fail':isReqeustFailed\n                \n            }\n            \n            let _requestCommandJsonString = JSON.stringify(_funcObject);\n            \n            let _kindOfDevice = bnkBridge.checkConnectedOS();\n            \n            switch(_kindOfDevice){\n                case \"Android\":\n                    window.bnkBridge.requestFromWebView(_requestCommandJsonString);\n                    break;\n                case \"iOS\":\n                    window.webkit.messageHandlers.bnkBridge.postMessage(_requestCommandJsonString);\n                    break;\n                default :\n                    console.log(\"지원하지 않는 디바이스 입니다\");\n                    break;\n            }\n        },\n        /**\n        * @name requestFromNative 네이티브에서 웹 호출\n        * @param {*} command 명령어\n        * @param {*} params 전송받은 파라미터\n        */\n        requestFromNative(command,params){\n            switch(command){\n                case \"DO_WEB_BACK\":\n                    window.history.back();\n                    break;\n                case \"ERROR\":\n                    break;\n            }\n        },\n        /**\n        * @name 기기 판별\n        */\n        checkConnectedOS(){\t\n            let _vender = navigator.userAgent || navigator.vendor || window.opera;\n\n            if (/windows/i.test(_vender)) { return \"Windows\"; } \n            if (/android/i.test(_vender)) { return \"Android\"; }\n            if (/iPad|iPhone|iPod/.test(_vender) && !window.MSStream) { return \"iOS\"; }\n                return \"unknown\";\n        },\n        /**\n        * @name 페이지 전환\n        * @url 넘어갈 페이지 PATH\n        * Vue 기반일때 사용\n        */\n        onChagePage(url){\n            router.push(url);\n        }\n    };\n\n    (function(){\n        window['requestFromNative'] = bnkBridge.requestFromNative\n        window['onChagePage'] = bnkBridge.onChagePage\n    }())\n\n    export default bnkBridge\n            ")]),e._v("\n        ")]),t("p",[e._v("위의 FULL SOURCE와 같이 "),t("code",[e._v("window['함수명'] = bnkBridge.함수명")]),e._v("으로 지정하면 네이티브가 호출하여 사용할 수 있는 전역 함수가 된다.")]),t("v-row",{staticStyle:{"align-items":"center","justify-content":"flex-end"}},[t("v-subheader",[e._v("디바이스 구별을 위한 UserAgent에 대해서 알아봅시다.")]),t("v-btn",{attrs:{text:"",link:"",to:"/mobile/agent"}},[e._v("다음 페이지 >")])],1)],1)],1)},a=[],s=(t("e1be"),t("2877")),r=t("6544"),o=t.n(r),c=t("8336"),d=t("62ad"),l=t("a523"),m=t("0fd9"),u=t("e0c7"),v={},_=Object(s["a"])(v,i,a,!1,null,"1d2b539c",null);n["default"]=_.exports;o()(_,{VBtn:c["a"],VCol:d["a"],VContainer:l["a"],VRow:m["a"],VSubheader:u["a"]})},98141:function(e,n,t){"use strict";t.r(n);var i,a,s=t("2877"),r={},o=Object(s["a"])(r,i,a,!1,null,null,null);n["default"]=o.exports},a28a:function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticStyle:{height:"100%",display:"flex","flex-direction":"row"}},[this.$vuetify.breakpoint.mdAndUp?t("v-navigation-drawer",{staticStyle:{height:"100%"},attrs:{permanent:"",app:"",clipped:""}},[t("v-list-item",[t("v-list-item-content",[t("v-list-item-title",{staticClass:"title",staticStyle:{color:"#d7191f"}},[e._v(" FRONT-END ")]),t("v-list-item-subtitle",[e._v(" All about JSP ")])],1)],1),t("v-divider"),t("v-list",{attrs:{dense:"",nav:""}},e._l(e.menus,(function(n){return t("v-list-item",{key:n.title,attrs:{link:"",to:n.link,"active-class":"white--text text--accent-4"}},[t("v-list-item-icon",[t("v-icon",[e._v(e._s(n.icon))])],1),t("v-list-item-content",[t("v-list-item-title",[e._v(e._s(n.title))])],1)],1)})),1)],1):e._e(),t("router-view")],1)},a=[],s={name:"MobileView",data:function(){return{menus:[{title:"BRIDGE",icon:"mdi-alpha-b",link:"bridge"},{title:"USERAGENT",icon:"mdi-alpha-a",link:"agent"}],right:null}}},r=s,o=(t("1c62"),t("2877")),c=t("6544"),d=t.n(c),l=t("ce7e"),m=t("132d"),u=t("8860"),v=t("da13"),_=t("5d23"),b=t("34c3"),g=t("f774"),w=Object(o["a"])(r,i,a,!1,null,"3bbcfb8f",null);n["default"]=w.exports;d()(w,{VDivider:l["a"],VIcon:m["a"],VList:u["a"],VListItem:v["a"],VListItemContent:_["a"],VListItemIcon:b["a"],VListItemSubtitle:_["b"],VListItemTitle:_["c"],VNavigationDrawer:g["a"]})},e1be:function(e,n,t){"use strict";t("ebed")},ebed:function(e,n,t){}}]);
//# sourceMappingURL=mobile.d5f5cfeb.js.map